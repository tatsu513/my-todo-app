{"version":3,"sources":["reducks/users/actions.tsx","reducks/store/initialState.tsx","reducks/users/reducers.tsx","firebase/index.js","firebase/config.js","reducks/store/store.tsx","components/UIkit/input/TextInput.tsx","components/UIkit/buttons/Button.tsx","components/UIkit/TextLink.tsx","components/Reset.tsx","reducks/users/operations.tsx","components/SignIn.tsx","components/SignUp.tsx","assets/images/login-back.png","templates/Account.tsx","reducks/users/selectore.tsx","templates/Home.tsx","Auth.tsx","Router.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["SIGN_IN","signInAction","userState","type","payload","isSignedIn","role","uid","userName","SIGN_OUT","initialState","users","UsersReducer","state","action","Actions","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","history","auth","provider","GoogleAuthProvider","db","firestore","FirebaseTimetamp","storage","functions","Timestamp","InputWrap","styled","div","Input","input","TextInput","props","placeholder","label","value","onChange","event","Btn","button","Button","onClick","Link","a","TextLink","href","text","SigninContainer","Reset","dispatch","useDispatch","useState","email","setEmail","inputEmail","useCallback","target","className","alert","sendPasswordResetEmail","then","push","resetPassword","Login","password","setPassword","inputPassword","signInWithPopup","result","user","timestamp","now","displayName","userInitialData","created_at","update_at","username","collection","doc","set","catch","err","signInWithEmailAndPassword","get","snapshot","data","SignIn","SignupContainer","SignUp","setUsername","confirmPassword","setConfirmPassword","inputUsername","inputConfirmPassword","createUserWithEmailAndPassword","signup","AccountWrap","Account","pathname","window","location","setIsSingIn","path","setPath","useEffect","split","match","replace","style","backgroundImage","usersSelector","getIsSignedIn","createSelector","getUserId","getUserName","Home","selector","useSelector","signOut","Auth","children","onAuthStateChanged","Router","exact","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","History","store","reduxCreateStore","combineReducers","router","connectRouter","applyMiddleware","routerMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a53a9d15.chunk.js","sourcesContent":["import { usersState } from \"../store/types\";\nexport const SIGN_IN = \"SIGN_IN\";\nexport const signInAction = (userState: usersState) => {\n  return {\n    type: \"SIGN_IN\",\n    payload: {\n      isSignedIn: true,\n      role: userState.role,\n      uid: userState.uid,\n      userName: userState.userName,\n    },\n  };\n};\n\nexport const SIGN_OUT = \"SIGN_OUT\";\nexport const signOutAction = () => {\n  return {\n    type: \"SIGN_OUT\",\n    payload: {\n      isSignedIn: true,\n      role: \"\",\n      uid: \"\",\n      userName: \"\",\n    },\n  };\n};\n","export const initialState = {\n  users: {\n    isSignedIn: false,\n    uid: \"\",\n    userName: \"\",\n    role: \"\",\n  },\n};\n\nexport default initialState;\n","import * as Actions from \"./actions\";\nimport { initialState } from \"../store/initialState\";\n\ntype Action = {\n  type: string;\n  payload: {};\n};\n\nexport const UsersReducer = (\n  state = initialState.users,\n  action: Action\n) => {\n  switch (action.type) {\n    case Actions.SIGN_IN:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    case Actions.SIGN_OUT:\n      return {\n        ...action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\nimport \"firebase/functions\";\nimport { firebaseConfig } from \"./config\";\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const auth = firebase.auth();\nexport const provider = new firebase.auth.GoogleAuthProvider();\nexport const db = firebase.firestore();\nexport const storage = firebase.storage();\nexport const functions = firebase.functions();\nexport const FirebaseTimetamp = firebase.firestore.Timestamp;\n","export const firebaseConfig = {\n  apiKey: \"AIzaSyBxyM78ThyO9BxgNNMNuUn1MsBBzTKJoCg\",\n  authDomain: \"my-todo-app-9855c.firebaseapp.com\",\n  projectId: \"my-todo-app-9855c\",\n  storageBucket: \"my-todo-app-9855c.appspot.com\",\n  messagingSenderId: \"1073370607895\",\n  appId: \"1:1073370607895:web:91e0ea3e3b2b3832850752\",\n  measurementId: \"G-18E83P77FW\",\n};\n","import {\n  createStore as reduxCreateStore,\n  combineReducers,\n  applyMiddleware,\n} from \"redux\";\nimport { connectRouter, routerMiddleware } from \"connected-react-router\";\nimport * as History from \"history\";\nimport thunk from \"redux-thunk\";\nimport { UsersReducer } from \"../users/reducers\";\n\nexport default function createStore(history: History.History<unknown>) {\n  return reduxCreateStore(\n    combineReducers({\n      router: connectRouter(history),\n      users: UsersReducer,\n    }),\n    applyMiddleware(routerMiddleware(history), thunk)\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ntype Props = {\n  label: string;\n  value: string;\n  type?: string;\n  onChange: Function;\n};\n\nconst TextInput: React.FC<Props> = (props) => {\n  return (\n    <InputWrap>\n      <Input\n        type={props.type ? props.type : \"text\"}\n        placeholder={props.label}\n        value={props.value}\n        onChange={(event) => props.onChange(event)}\n      />\n    </InputWrap>\n  );\n};\n\nconst InputWrap = styled.div`\n  margin-bottom: 16px;\n  width: 100%;\n  position: relative;\n`;\n\nconst Input = styled.input`\n  height: 40px;\n  width: 100%;\n  caret-color: \"#fff\";\n  color: #fff;\n  &[type=\"text\"],\n  &[type=\"password\"] {\n    padding: 0 24px;\n    border: 1px solid #fff;\n    border-radius: 20px;\n  }\n  &::placeholder {\n    color: #fff;\n    opacity: 0.5;\n  }\n`;\n\nexport default TextInput;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ntype Props = {\n  label: string;\n  action: Function;\n};\n\nconst Button: React.FC<Props> = (props) => {\n  return <Btn onClick={() => props.action()}>{props.label}</Btn>;\n};\n\nconst Btn = styled.button`\n  height: 40px;\n  width: 100%;\n  background: #fff;\n  border: none;\n  border-radius: 20px;\n  color: #585858;\n  font-size: 16px;\n  transition: background 300ms ease-out;\n  cursor: pointer;\n  &:hover {\n    background: #dadada;\n  }\n`;\n\nexport default Button;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ntype Props = {\n  text: string;\n  action: Function;\n};\n\nconst TextLink: React.FC<Props> = (props) => {\n  return (\n    <Link href=\"#\" onClick={() => props.action()}>\n      {props.text}\n    </Link>\n  );\n};\n\nconst Link = styled.a`\n  color: #fff;\n  cursor: pointer;\n  opacity: 1;\n  text-decoration: none;\n  transition: opacity 200ms ease-out;\n  &:hover {\n    opacity: 0.7;\n  }\n`;\n\nexport default TextLink;\n","import React, { useState, useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { resetPassword } from \"../reducks/users/operations\";\nimport styled from \"styled-components\";\nimport { TextInput, Button, TextLink } from \"./UIkit\";\nimport { push } from \"connected-react-router\";\n\nconst Reset: React.FC = () => {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState(\"\");\n\n  const inputEmail = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      setEmail(event.target.value);\n    },\n    [setEmail]\n  );\n\n  return (\n    <SigninContainer>\n      <h2 className=\"login-title\">Reset Password</h2>\n      <TextInput\n        label={\"email\"}\n        value={email}\n        onChange={inputEmail}\n      />\n      <Button\n        label={\"Reset Password\"}\n        action={() => dispatch(resetPassword(email))}\n      />\n      <div className=\"sub-menu\">\n        <TextLink text={\"\"} action={() => alert(\"forget\")} />\n        <TextLink\n          text={\"Back to SignIn\"}\n          action={() => dispatch(push(\"/signin\"))}\n        />\n      </div>\n    </SigninContainer>\n  );\n};\n\nconst SigninContainer = styled.div`\n  .login-title {\n    font-size: 24px;\n    margin-bottom: 32px;\n    color: #fff;\n  }\n\n  .separator-text {\n    margin: 24px 0;\n    color: #fff;\n  }\n\n  .sub-menu {\n    display: flex;\n    justify-content: space-between;\n    margin-top: 16px;\n    color: #fff;\n  }\n`;\n\nexport default Reset;\n","import { signInAction, signOutAction } from \"./actions\";\nimport { push } from \"connected-react-router\";\nimport { auth, db, FirebaseTimetamp, provider } from \"../../firebase\";\nimport { Dispatch } from \"redux\";\n\nexport const listenAuthState = () => {\n  return async (dispatch: Dispatch) => {\n    return auth.onAuthStateChanged((user) => {\n      if (user) {\n        const uid = user.uid;\n        db.collection(\"users\")\n          .doc(uid)\n          .get()\n          .then((snapshot) => {\n            const data = snapshot.data();\n\n            dispatch(\n              signInAction({\n                isSignedIn: true,\n                role: \"customer\",\n                uid: data!.uid,\n                userName: data!.username,\n              })\n            );\n\n            dispatch(push(\"/\"));\n          });\n      } else {\n        dispatch(push(\"/signin\"));\n      }\n    });\n  };\n};\n\nexport const SignIn = (email: string, password: string) => {\n  return async (dispatch: Dispatch) => {\n    if (email === \"\" || password === \"\") {\n      alert(\"未入力\");\n      return false;\n    }\n\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .then((result) => {\n        const user = result.user;\n\n        if (user) {\n          const uid = user.uid;\n          db.collection(\"users\")\n            .doc(uid)\n            .get()\n            .then((snapshot) => {\n              const data = snapshot.data();\n\n              dispatch(\n                signInAction({\n                  isSignedIn: true,\n                  role: data!.role,\n                  uid: data!.uid,\n                  userName: data!.username,\n                })\n              );\n\n              dispatch(push(\"/\"));\n            });\n        }\n      });\n  };\n};\n\nexport const SignWithGoogle = () => {\n  return async (dispatch: Dispatch) => {\n    auth\n      .signInWithPopup(provider)\n      .then((result) => {\n        const user = result.user;\n        const timestamp = FirebaseTimetamp.now();\n\n        if (user) {\n          dispatch(\n            signInAction({\n              isSignedIn: true,\n              role: \"customer\",\n              uid: user.uid,\n              userName: user.displayName || \"\",\n            })\n          );\n          const userInitialData = {\n            created_at: timestamp,\n            email: user.email,\n            role: \"cusotmer\",\n            uid: user.uid,\n            update_at: timestamp,\n            username: user.displayName,\n          };\n\n          db.collection(\"users\")\n            .doc(user.uid)\n            .set(userInitialData)\n            .then(() => dispatch(push(\"/\")));\n        }\n        dispatch(push(\"/\"));\n      })\n      .catch((err) => alert(err));\n  };\n};\n\nexport const signup = (\n  username: string,\n  email: string,\n  password: string,\n  confirmPassword: string\n) => {\n  return async (dispatch: Dispatch) => {\n    if (\n      username === \"\" ||\n      email === \"\" ||\n      password === \"\" ||\n      confirmPassword === \"\"\n    ) {\n      alert(\"必須が空です\");\n      return false;\n    }\n    if (password !== confirmPassword) {\n      alert(\"パスワードが一致していません\");\n      return false;\n    }\n\n    return auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((result) => {\n        const user = result.user;\n\n        if (user) {\n          const uid = user.uid;\n          const timestamp = FirebaseTimetamp.now();\n\n          const userInitialData = {\n            created_at: timestamp,\n            email: email,\n            role: \"cusotmer\",\n            uid: uid,\n            update_at: timestamp,\n            username: username,\n          };\n\n          db.collection(\"users\")\n            .doc(uid)\n            .set(userInitialData)\n            .then(() => dispatch(push(\"/\")));\n        }\n      });\n  };\n};\n\nexport const signOut = () => {\n  return async (dispatch: Dispatch) => {\n    auth.signOut().then(() => {\n      dispatch(signOutAction());\n      dispatch(push(\"/signin\"));\n    });\n  };\n};\n\nexport const resetPassword = (email: string) => {\n  return async (dispatch: Dispatch) => {\n    if (email === \"\") {\n      alert(\"メールアドレスが未入力です\");\n      return false;\n    } else {\n      auth.sendPasswordResetEmail(email).then(() => {\n        alert(\"パスワード変更用のメールを送信しました。\");\n        dispatch(push(\"/signin\"));\n      });\n    }\n  };\n};\n","import React, { useState, useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { SignIn, SignWithGoogle } from \"../reducks/users/operations\";\nimport styled from \"styled-components\";\nimport { TextInput, Button, TextLink } from \"./UIkit\";\nimport { push } from \"connected-react-router\";\n\nconst Login: React.FC = () => {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const inputEmail = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      setEmail(event.target.value);\n    },\n    [setEmail]\n  );\n\n  const inputPassword = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      setPassword(event.target.value);\n    },\n    [setPassword]\n  );\n\n  return (\n    <SigninContainer>\n      <h2 className=\"login-title\">Login</h2>\n      <Button\n        label={\"Login with Google\"}\n        action={() => dispatch(SignWithGoogle())}\n      />\n      <p className=\"separator-text\">or</p>\n      <TextInput\n        label={\"email\"}\n        value={email}\n        onChange={inputEmail}\n      />\n      <TextInput\n        label={\"password\"}\n        type={\"password\"}\n        value={password}\n        onChange={inputPassword}\n      />\n      <Button\n        label={\"Login\"}\n        action={() => dispatch(SignIn(email, password))}\n      />\n      <div className=\"sub-menu\">\n        <TextLink\n          text={\"Forgot Password\"}\n          action={() => dispatch(push(\"/reset\"))}\n        />\n        <TextLink\n          text={\"Create Account\"}\n          action={() => dispatch(push(\"/signup\"))}\n        />\n      </div>\n    </SigninContainer>\n  );\n};\n\nconst SigninContainer = styled.div`\n  .login-title {\n    font-size: 24px;\n    margin-bottom: 32px;\n    color: #fff;\n  }\n\n  .separator-text {\n    margin: 24px 0;\n    color: #fff;\n  }\n\n  .sub-menu {\n    display: flex;\n    justify-content: space-between;\n    margin-top: 16px;\n    color: #fff;\n  }\n`;\n\nexport default Login;\n","import { push } from \"connected-react-router\";\nimport React, { useCallback, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { Button, TextInput, TextLink } from \"../components/UIkit\";\nimport { signup } from \"../reducks/users/operations\";\n\nconst SignUp: React.FC = () => {\n  const dispatch = useDispatch();\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  const inputUsername = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      setUsername(event.target.value);\n    },\n    [setUsername]\n  );\n\n  const inputEmail = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      setEmail(event.target.value);\n    },\n    [setEmail]\n  );\n\n  const inputPassword = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      setPassword(event.target.value);\n    },\n    [setPassword]\n  );\n\n  const inputConfirmPassword = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      setConfirmPassword(event.target.value);\n    },\n    [setConfirmPassword]\n  );\n\n  return (\n    <SignupContainer>\n      <h2 className=\"title\">SignUp</h2>\n      <TextInput\n        label={\"username\"}\n        value={username}\n        onChange={inputUsername}\n      />\n      <TextInput\n        label={\"email\"}\n        value={email}\n        onChange={inputEmail}\n      />\n      <TextInput\n        label={\"password\"}\n        type={\"password\"}\n        value={password}\n        onChange={inputPassword}\n      />\n      <TextInput\n        label={\"password\"}\n        type={\"password\"}\n        value={confirmPassword}\n        onChange={inputConfirmPassword}\n      />\n      <Button\n        label={\"SignUp\"}\n        action={() =>\n          dispatch(signup(username, email, password, confirmPassword))\n        }\n      />\n      <div className=\"sub-menu\">\n        <TextLink text={\"\"} action={() => alert(\"いいい\")} />\n        <TextLink\n          text={\"Signin\"}\n          action={() => dispatch(push(\"/signin\"))}\n        />\n      </div>\n    </SignupContainer>\n  );\n};\n\nconst SignupContainer = styled.div`\n  .title {\n    font-size: 24px;\n    margin-bottom: 32px;\n    color: #fff;\n  }\n  .sub-menu {\n    display: flex;\n    justify-content: space-between;\n    margin-top: 16px;\n    color: #fff;\n  }\n`;\n\nexport default SignUp;\n","export default __webpack_public_path__ + \"static/media/login-back.b84ce1aa.png\";","import React, { useEffect, useState } from \"react\";\nimport { Reset, SignIn, SignUp } from \"../components/\";\nimport styled from \"styled-components\";\nimport backgroundImage from \"../assets/images/login-back.png\";\n\nconst Account: React.FC = () => {\n  const pathname = window.location.pathname;\n  const [isSignIn, setIsSingIn] = useState(true);\n  const [path, setPath] = useState(\"signin\");\n\n  useEffect(() => {\n    setIsSingIn(\n      pathname.split(\"/\")[1].match(/^signin(#)?/) ? true : false\n    );\n  }, [pathname]);\n\n  useEffect(() => {\n    setPath(pathname.split(\"/\")[1].replace(\"#\", \"\"));\n  }, [pathname]);\n  return (\n    <AccountWrap\n      style={{ backgroundImage: `url(${backgroundImage})` }}\n    >\n      <div className=\"overlay\" />\n      <div className=\"container\">\n        {path === \"signin\" && <SignIn />}\n        {path === \"signup\" && <SignUp />}\n        {path === \"reset\" && <Reset />}\n        {/* {isSignIn ? <SignIn /> : <SignUp />} */}\n      </div>\n    </AccountWrap>\n  );\n};\n\nconst AccountWrap = styled.div`\n  height: 100vh;\n  position: relative;\n  background-size: cover;\n\n  .overlay {\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    background: #000;\n    opacity: 0.4;\n  }\n\n  .container {\n    width: 320px;\n    margin: 0 auto;\n    padding-top: 88px;\n    position: relative;\n    text-align: center;\n  }\n`;\n\nexport default Account;\n","import { createSelector } from \"reselect\";\nimport { usersState } from \"../store/types\";\n\nconst usersSelector = (state: any): usersState => {\n  return state.users;\n};\n\nexport const getIsSignedIn = createSelector(\n  [usersSelector],\n  (state) => state.isSignedIn\n);\n\nexport const getUserId = createSelector(\n  [usersSelector],\n  (state) => state.uid\n);\n\nexport const getUserName = createSelector(\n  [usersSelector],\n  (state) => state.userName\n);\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUserId, getUserName } from \"../reducks/users/selectore\";\nimport { signOut } from \"../reducks/users/operations\";\n\nconst Home: React.FC = () => {\n  const dispatch = useDispatch();\n  const selector = useSelector((state) => state);\n  const uid = getUserId(selector);\n  const username = getUserName(selector);\n  return (\n    <div>\n      <h2>ホームー</h2>\n      <p>uid：{uid}</p>\n      <p>username：{username}</p>\n      <button onClick={() => dispatch(signOut())}>Sign Out</button>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { listenAuthState } from \"./reducks/users/operations\";\nimport { getIsSignedIn } from \"./reducks/users/selectore\";\n\nconst Auth = ({ children }: any) => {\n  const dispatch = useDispatch();\n  const selector = useSelector((state) => state);\n  const isSignedIn = getIsSignedIn(selector);\n\n  useEffect(() => {\n    if (!isSignedIn) {\n      dispatch(listenAuthState());\n    }\n  }, [dispatch, isSignedIn]);\n\n  if (!isSignedIn) {\n    return <></>;\n  } else {\n    return children;\n  }\n};\n\nexport default Auth;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router\";\nimport { Home, Account } from \"./templates\";\nimport Auth from \"./Auth\";\n\nconst Router: React.FC = () => {\n  return (\n    <Switch>\n      <Route exact path={\"/signup\"} component={Account} />\n      <Route exact path={\"/signin\"} component={Account} />\n      <Route exact path={\"/reset\"} component={Account} />\n      <Auth>\n        <Route exact path={\"(/)?\"} component={Home} />\n      </Auth>\n    </Switch>\n  );\n};\n\nexport default Router;\n","import React from \"react\";\nimport Router from \"./Router\";\nimport \"./assets/styles/reset.css\";\nimport \"./assets/styles/style.css\";\n\nconst App: React.FC = () => {\n  return (\n    <main className=\"c-main\">\n      <Router />\n    </main>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport createStore from \"./reducks/store/store\";\nimport * as History from \"history\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst history = History.createBrowserHistory();\nexport const store = createStore(history);\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
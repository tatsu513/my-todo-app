{"version":3,"sources":["reducks/users/actions.tsx","reducks/store/initialState.tsx","reducks/users/reducers.tsx","reducks/todos/actions.tsx","reducks/todos/reducers.tsx","firebase/index.js","firebase/config.js","reducks/users/operations.tsx","components/UIkit/buttons/AccountButton.tsx","components/UIkit/buttons/PrimaryButton.tsx","components/UIkit/buttons/SecondaryButton.tsx","components/UIkit/Chips/SecondaryChip.tsx","components/UIkit/input/AccountTextInput.tsx","components/UIkit/input/InputDatePicker.tsx","components/UIkit/input/InputText.tsx","components/UIkit/input/SelectBox.tsx","components/UIkit/Switch.tsx","components/UIkit/TextLink.tsx","components/Reset.tsx","reducks/todos/operations.tsx","reducks/users/selectore.tsx","components/modal/AddToDoModal.tsx","components/modal/AddCategoryModal.tsx","components/SideMenu.tsx","components/SignIn.tsx","components/SignUp.tsx","reducks/todos/selectore.tsx","components/ToDoBody.tsx","plugins/dayjs.ts","reducks/store/store.tsx","components/ToDoItem.tsx","assets/images/login-back.png","templates/Account.tsx","templates/Home.tsx","Auth.tsx","Router.tsx","assets/Theme.js","App.tsx","reportWebVitals.js","index.tsx"],"names":["ADD_CATEGORY","FEATCH_CATEGORIES","SIGN_IN","signInAction","userState","type","payload","isSignedIn","role","uid","userName","SIGN_OUT","initialState","users","categories","todos","todoList","UsersReducer","state","action","Actions","CREATE_TODO","FETCH_TODOS","TOGGLE_ACTIVE_STATE","ToDoesReducer","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","provider","GoogleAuthProvider","db","firestore","FirebaseTimetamp","storage","functions","Timestamp","fetchCategories","dispatch","getState","a","collection","doc","orderBy","get","then","snapshots","list","forEach","snapshot","data","push","id","name","BaseBtn","styled","div","WhiteBtn","Button","props","theme","palette","primary","light","text","PrimaryBtn","main","AccountButton","color","variant","onClick","label","CustomLocalButton","dark","PrimaryButton","startIcon","SecondaryButton","CustomChip","Chip","secondary","SecondaryChip","size","StyledTextField","TextField","AccountTextInput","fullWidth","margin","multiline","required","rows","value","onChange","FormWrapper","KeyboardDatePicker","InputDatePicker","utils","DateFnsUtils","disableToolbar","format","KeyboardButtonProps","InputText","autoFocus","CustomFormControl","FormControl","SelectBox","InputLabel","inputId","Select","labelId","selectBoxId","items","length","map","item","MenuItem","LocalSwitch","Switch","checked","Link","TextLink","href","SigninContainer","Reset","useDispatch","useState","email","setEmail","inputEmail","useCallback","event","target","className","alert","sendPasswordResetEmail","resetPassword","fetchTodos","limitDate","category","memo","activeState","active_state","createdAt","created_at","usersSelector","getCategories","createSelector","getIsSignedIn","getUserName","AddToDoModal","selector","useSelector","setName","Date","setLimitDate","setCategory","setMemo","InputName","InputLimitDate","date","SelectedCategory","InputMemo","createTodoSubmit","timeStamp","now","todosRef","addData","limit_date","update_at","set","createTodo","onClose","Dialog","open","isOpen","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","addCategoryMethod","categoryLength","categoryRef","addCategory","SideBarWrapper","MenuTitle","AddCategory","SideMunuContainer","SideMenu","isOpenAddCategoryModal","setIsOpenAddCategoryModal","openAddCategoryModal","closeAddCategoryModal","AddCategoryModal","Login","password","setPassword","inputPassword","signInWithPopup","result","user","timestamp","displayName","userInitialData","username","catch","err","signInWithEmailAndPassword","SignIn","SignupContainer","SignUp","setUsername","confirmPassword","setConfirmPassword","inputUsername","inputConfirmPassword","createUserWithEmailAndPassword","signup","getTodoList","todo","ToDoBodyWrapper","Controller","ToDoBody","categoryId","filteredList","setFilteredList","isOpenAddTodoModal","setIsOpenAddTodoModal","openAddTodoModal","closeAddTodoModal","useEffect","filter","dayjs","locale","ja","history","yyyymmdd","ToDoItem2","li","grey","line","ToDoItem","setState","handleChange","merge","index","findIndex","toggleActiveState","deleteTodoSubmit","delete","deleteTodo","toDate","find","displayCategory","IconButton","AccountWrap","Account","pathname","window","location","path","setPath","split","replace","style","backgroundImage","Container","ToDoWrapper","Home","filterCategoryId","setFilterCategoryId","filterCategory","Auth","children","onAuthStateChanged","Router","exact","component","createMuiTheme","contrastText","50","100","200","300","400","500","600","700","800","900","A100","A200","A400","A700","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","History","store","reduxCreateStore","combineReducers","router","connectRouter","applyMiddleware","routerMiddleware","thunk","ReactDOM","render","StylesProvider","injectFirst","document","getElementById"],"mappings":"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","file":"static/js/main.480381a6.chunk.js","sourcesContent":["import { usersState } from \"../store/types\";\n\nexport const ADD_CATEGORY = \"ADD_CATEGORY\";\nexport const addCategoryAction = (category: { name: string }) => {\n  return {\n    type: \"ADD_CATEGORY\",\n    payload: {\n      name: category.name,\n    },\n  };\n};\n\nexport const FEATCH_CATEGORIES = \"FEATCH_CATEGORIES\";\nexport const fetchCategoriesAction = (\n  categories: { id: string; name: string }[]\n) => {\n  return {\n    type: \"FEATCH_CATEGORIES\",\n    payload: {\n      categories: categories,\n    },\n  };\n};\n\nexport const SIGN_IN = \"SIGN_IN\";\nexport const signInAction = (userState: usersState) => {\n  return {\n    type: \"SIGN_IN\",\n    payload: {\n      isSignedIn: true,\n      role: userState.role,\n      uid: userState.uid,\n      userName: userState.userName,\n    },\n  };\n};\n\nexport const SIGN_OUT = \"SIGN_OUT\";\nexport const signOutAction = () => {\n  return {\n    type: \"SIGN_OUT\",\n    payload: {\n      isSignedIn: true,\n      role: \"\",\n      uid: \"\",\n      userName: \"\",\n    },\n  };\n};\n","export const initialState = {\n  users: {\n    isSignedIn: false,\n    uid: \"\",\n    userName: \"\",\n    role: \"\",\n    categories: [],\n  },\n  todos: {\n    todoList: [],\n  },\n};\n\nexport default initialState;\n","import * as Actions from \"./actions\";\nimport { initialState } from \"../store/initialState\";\n\ntype Action = {\n  type: string;\n  payload: {};\n};\n\nexport const UsersReducer = (\n  state = initialState.users,\n  action: Action\n) => {\n  switch (action.type) {\n    case Actions.ADD_CATEGORY:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    case Actions.FEATCH_CATEGORIES:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    case Actions.SIGN_IN:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    case Actions.SIGN_OUT:\n      return {\n        ...action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import { Todo } from \"../store/types\";\n\nexport const CREATE_TODO = \"CREATE_TODO\";\nexport const createTodoAction = (todos: Todo) => {\n  return {\n    type: \"CREATE_TODO\",\n    payload: {\n      todos: todos,\n    },\n  };\n};\n\nexport const FETCH_TODOS = \"FETCH_TODOS\";\nexport const fetchTodosAction = (todos: Todo[]) => {\n  return {\n    type: \"CREATE_TODO\",\n    payload: {\n      todoList: todos,\n    },\n  };\n};\n\nexport const TOGGLE_ACTIVE_STATE = \"TOGGLE_ACTIVE_STATE\";\nexport const toggleActiveStateAction = (todos: Todo[]) => {\n  return {\n    type: \"TOGGLE_ACTIVE_STATE\",\n    payload: {\n      todoList: todos,\n    },\n  };\n};\n","import * as Actions from \"./actions\";\nimport { initialState } from \"../store/initialState\";\n\ntype Action = {\n  type: string;\n  payload: {};\n};\n\nexport const ToDoesReducer = (\n  state = initialState.todos,\n  action: Action\n) => {\n  switch (action.type) {\n    case Actions.CREATE_TODO:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    case Actions.FETCH_TODOS:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    case Actions.TOGGLE_ACTIVE_STATE:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\nimport \"firebase/functions\";\nimport { firebaseConfig } from \"./config\";\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const auth = firebase.auth();\nexport const provider = new firebase.auth.GoogleAuthProvider();\nexport const db = firebase.firestore();\nexport const storage = firebase.storage();\nexport const functions = firebase.functions();\nexport const FirebaseTimetamp = firebase.firestore.Timestamp;\n","export const firebaseConfig = {\n  apiKey: \"AIzaSyBxyM78ThyO9BxgNNMNuUn1MsBBzTKJoCg\",\n  authDomain: \"my-todo-app-9855c.firebaseapp.com\",\n  projectId: \"my-todo-app-9855c\",\n  storageBucket: \"my-todo-app-9855c.appspot.com\",\n  messagingSenderId: \"1073370607895\",\n  appId: \"1:1073370607895:web:91e0ea3e3b2b3832850752\",\n  measurementId: \"G-18E83P77FW\",\n};\n","import {\n  fetchCategoriesAction,\n  signInAction,\n  signOutAction,\n} from \"./actions\";\nimport { push } from \"connected-react-router\";\nimport { auth, db, FirebaseTimetamp, provider } from \"../../firebase\";\nimport { Dispatch } from \"redux\";\n\nexport const addCategory = (name: string) => {\n  return async (dispatch: Dispatch, getState: any) => {\n    const timeStamp = FirebaseTimetamp.now();\n    if (name === \"\") {\n      alert(\"カテゴリ名称が空です。\");\n      return false;\n    } else {\n      const uid = getState().users.uid;\n      const categoryLength = getState().users.categories.length;\n      const categoryRef = db\n        .collection(\"users\")\n        .doc(uid)\n        .collection(\"categories\")\n        .doc();\n      const addData = {\n        id: categoryLength + 1,\n        name: name,\n        created_at: timeStamp,\n        update_at: timeStamp,\n      };\n      categoryRef.set(addData);\n    }\n  };\n};\n\nexport const fetchCategories = () => {\n  return async (dispatch: Dispatch, getState: any) => {\n    const uid = getState().users.uid;\n    db.collection(\"users\")\n      .doc(uid)\n      .collection(\"categories\")\n      .orderBy(\"created_at\", \"asc\")\n      .get()\n      .then((snapshots) => {\n        const list: { id: string; name: string }[] = [];\n        snapshots.forEach((snapshot) => {\n          const data = snapshot.data();\n          list.push({\n            id: data.id,\n            name: data.name,\n          });\n        });\n        dispatch(fetchCategoriesAction(list));\n      });\n  };\n};\n\nexport const listenAuthState = () => {\n  return async (dispatch: Dispatch) => {\n    return auth.onAuthStateChanged((user) => {\n      if (user) {\n        const uid = user.uid;\n        db.collection(\"users\")\n          .doc(uid)\n          .get()\n          .then((snapshot) => {\n            const data = snapshot.data();\n\n            dispatch(\n              signInAction({\n                isSignedIn: true,\n                role: \"customer\",\n                uid: data!.uid,\n                userName: data!.username,\n                categories: [],\n              })\n            );\n\n            dispatch(push(\"/\"));\n          });\n      } else {\n        dispatch(push(\"/signin\"));\n      }\n    });\n  };\n};\n\nexport const SignIn = (email: string, password: string) => {\n  return async (dispatch: Dispatch) => {\n    if (email === \"\" || password === \"\") {\n      alert(\"未入力\");\n      return false;\n    }\n\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .then((result) => {\n        const user = result.user;\n\n        if (user) {\n          const uid = user.uid;\n          db.collection(\"users\")\n            .doc(uid)\n            .get()\n            .then((snapshot) => {\n              const data = snapshot.data();\n\n              dispatch(\n                signInAction({\n                  isSignedIn: true,\n                  role: data!.role,\n                  uid: data!.uid,\n                  userName: data!.username,\n                  categories: [],\n                })\n              );\n\n              dispatch(push(\"/\"));\n            });\n        }\n      });\n  };\n};\n\nexport const SignWithGoogle = () => {\n  return async (dispatch: Dispatch) => {\n    auth\n      .signInWithPopup(provider)\n      .then((result) => {\n        const user = result.user;\n        const timestamp = FirebaseTimetamp.now();\n\n        if (user) {\n          dispatch(\n            signInAction({\n              isSignedIn: true,\n              role: \"customer\",\n              uid: user.uid,\n              userName: user.displayName || \"\",\n              categories: [],\n            })\n          );\n          const userInitialData = {\n            created_at: timestamp,\n            email: user.email,\n            role: \"cusotmer\",\n            uid: user.uid,\n            update_at: timestamp,\n            username: user.displayName,\n          };\n\n          db.collection(\"users\")\n            .doc(user.uid)\n            .set(userInitialData)\n            .then(() => dispatch(push(\"/\")));\n        }\n        dispatch(push(\"/\"));\n      })\n      .catch((err) => alert(err));\n  };\n};\n\nexport const signup = (\n  username: string,\n  email: string,\n  password: string,\n  confirmPassword: string\n) => {\n  return async (dispatch: Dispatch) => {\n    if (\n      username === \"\" ||\n      email === \"\" ||\n      password === \"\" ||\n      confirmPassword === \"\"\n    ) {\n      alert(\"必須が空です\");\n      return false;\n    }\n    if (password !== confirmPassword) {\n      alert(\"パスワードが一致していません\");\n      return false;\n    }\n\n    return auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((result) => {\n        const user = result.user;\n\n        if (user) {\n          const uid = user.uid;\n          const timestamp = FirebaseTimetamp.now();\n\n          const userInitialData = {\n            created_at: timestamp,\n            email: email,\n            role: \"cusotmer\",\n            uid: uid,\n            update_at: timestamp,\n            username: username,\n          };\n\n          db.collection(\"users\")\n            .doc(uid)\n            .set(userInitialData)\n            .then(() => dispatch(push(\"/\")));\n        }\n      });\n  };\n};\n\nexport const signOut = () => {\n  return async (dispatch: Dispatch) => {\n    auth.signOut().then(() => {\n      dispatch(signOutAction());\n      dispatch(push(\"/signin\"));\n    });\n  };\n};\n\nexport const resetPassword = (email: string) => {\n  return async (dispatch: Dispatch) => {\n    if (email === \"\") {\n      alert(\"メールアドレスが未入力です\");\n      return false;\n    } else {\n      auth.sendPasswordResetEmail(email).then(() => {\n        alert(\"パスワード変更用のメールを送信しました。\");\n        dispatch(push(\"/signin\"));\n      });\n    }\n  };\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Button } from \"@material-ui/core\";\n\ntype Props = {\n  onClick: Function;\n  color?: string;\n  label: string;\n};\n\nconst AccountButton: React.FC<Props> = (props) => {\n  return (\n    <>\n      <BaseBtn>\n        {props.color === \"white\" ? (\n          <WhiteBtn\n            variant=\"contained\"\n            onClick={() => props.onClick()}\n          >\n            {props.label}\n          </WhiteBtn>\n        ) : (\n          <PrimaryBtn\n            variant=\"contained\"\n            onClick={() => props.onClick()}\n          >\n            {props.label}\n          </PrimaryBtn>\n        )}\n      </BaseBtn>\n    </>\n  );\n};\n\nconst BaseBtn = styled.div`\n  height: 40px;\n  width: 100%;\n  margin-top: 8px;\n  margin-bottom: 4px;\n  border-radius: 20px;\n  overflow: hidden;\n`;\n\nconst WhiteBtn = styled(Button)`\n  height: 100%;\n  width: 100%;\n  background: ${(props) => props.theme.palette.primary.light};\n  color: ${(props) => props.theme.palette.text.primary};\n  transition: background 300ms ease-out;\n  cursor: pointer;\n  &:hover {\n    background: #dadada;\n  }\n`;\n\nconst PrimaryBtn = styled(Button)`\n  height: 100%;\n  width: 100%;\n  background: ${(props) => props.theme.palette.primary.main};\n  color: ${(props) => props.theme.palette.text.primary};\n  transition: background 300ms ease-out;\n  cursor: pointer;\n  &:hover {\n    background: #dadada;\n  }\n`;\n\nexport default AccountButton;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Button } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\ntype Props = {\n  label: string;\n  onClick?: (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => void;\n};\n\nconst PrimaryButton: React.FC<Props> = (props) => {\n  return (\n    <CustomLocalButton\n      variant=\"contained\"\n      color=\"primary\"\n      startIcon={<AddIcon />}\n      onClick={props.onClick}\n    >\n      {props.label}\n    </CustomLocalButton>\n  );\n};\n\nconst CustomLocalButton = styled(Button)`\n  height: 40px;\n  border-radius: 20px;\n  color: #fff;\n  &:hover {\n    background-color: ${(props) => props.theme.palette.primary.dark};\n  }\n`;\n\nexport default PrimaryButton;\n","import React from \"react\";\nimport { Button } from \"@material-ui/core\";\n\ntype Props = {\n  label: string;\n  color: \"default\" | \"inherit\" | \"primary\" | \"secondary\" | undefined;\n  onClick?: (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => void;\n};\n\nconst SecondaryButton: React.FC<Props> = (props) => {\n  return (\n    <Button onClick={props.onClick} color={props.color}>\n      {props.label}\n    </Button>\n  );\n};\n\nexport default SecondaryButton;\n","import React from \"react\";\nimport { Chip } from \"@material-ui/core/\";\nimport styled from \"styled-components\";\n\ntype Props = {\n  label: string;\n};\n\nconst SecondaryChip: React.FC<Props> = (props) => {\n  return <CustomChip size=\"small\" label={props.label} />;\n};\n\nconst CustomChip = styled(Chip)`\n  background-color: ${(props) => props.theme.palette.secondary.main};\n  color: #fff;\n  font-size: 12px;\n`;\n\nexport default SecondaryChip;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { TextField } from \"@material-ui/core\";\n\ntype Props = {\n  label: string;\n  value: string;\n  type?: string;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst AccountTextInput: React.FC<Props> = (props) => {\n  return (\n    <StyledTextField\n      fullWidth={true}\n      label={props.label}\n      margin=\"dense\"\n      multiline={false}\n      required={true}\n      rows={0}\n      value={props.value}\n      variant=\"outlined\"\n      type={props.type ? props.type : \"text\"}\n      onChange={props.onChange}\n    />\n  );\n};\n\nconst StyledTextField = styled(TextField)`\n  .MuiOutlinedInput-root {\n    border-radius: 20px;\n    &.Mui-focused .MuiOutlinedInput-notchedOutline,\n    &:hover .MuiOutlinedInput-notchedOutline {\n      border: 1px solid #fff;\n    }\n  }\n  .MuiInputBase-root {\n    color: #fff;\n  }\n  .MuiOutlinedInput-notchedOutline {\n    border: 1px solid #fff;\n  }\n  .MuiFormLabel-root {\n    color: #fff;\n    opacity: 0.5;\n    &.Mui-focused {\n      color: #fff;\n    }\n  }\n`;\n\nexport default AccountTextInput;\n","import \"date-fns\";\nimport React from \"react\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\nimport styled from \"styled-components\";\nimport { MaterialUiPickersDate } from \"@material-ui/pickers/typings/date\";\n\ntype Props = {\n  id: string;\n  value: Date;\n  label: string;\n  onChange: (\n    date: MaterialUiPickersDate,\n    value?: string | null | undefined\n  ) => void;\n};\n\nconst InputDatePicker: React.FC<Props> = (props) => {\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <FormWrapper\n        disableToolbar\n        variant=\"inline\"\n        format=\"yyyy/MM/dd\"\n        margin=\"normal\"\n        id={props.id}\n        label={props.label}\n        value={props.value}\n        onChange={props.onChange}\n        KeyboardButtonProps={{\n          \"aria-label\": \"change date\",\n        }}\n      />\n    </MuiPickersUtilsProvider>\n  );\n};\n\nconst FormWrapper = styled(KeyboardDatePicker)`\n  width: 100%;\n`;\n\nexport default InputDatePicker;\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\n\ntype Props = {\n  id: string;\n  label: string;\n  type: string;\n  value: string | number;\n  fullWidth: boolean;\n  multiline: boolean;\n  rows: number;\n  autoFocus: boolean;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst InputText: React.FC<Props> = (props) => {\n  return (\n    <TextField\n      autoFocus={props.autoFocus}\n      margin=\"dense\"\n      id={props.id}\n      label={props.label}\n      type={props.type}\n      value={props.value}\n      fullWidth={props.fullWidth}\n      multiline={props.multiline}\n      rows={props.rows}\n      onChange={props.onChange}\n    />\n  );\n};\n\nexport default InputText;\n","import React from \"react\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport styled from \"styled-components\";\n\ntype Props = {\n  label: string;\n  inputId: string;\n  selectBoxId: string;\n  value: string;\n  items: {\n    id: string;\n    name: string;\n  }[];\n  onChange:\n    | ((\n        event: React.ChangeEvent<{\n          name?: string | undefined;\n          value: unknown;\n        }>,\n        child: React.ReactNode\n      ) => void)\n    | undefined;\n};\n\nconst SelectBox: React.FC<Props> = (props) => {\n  return (\n    <CustomFormControl>\n      <InputLabel id={props.inputId}>{props.label}</InputLabel>\n      <Select\n        labelId={props.inputId}\n        id={props.selectBoxId}\n        value={props.value}\n        onChange={props.onChange}\n      >\n        {props.items.length > 0 &&\n          props.items.map((item) => {\n            return (\n              <MenuItem key={item.name} value={item.id}>\n                {item.name}\n              </MenuItem>\n            );\n          })}\n      </Select>\n    </CustomFormControl>\n  );\n};\n\nconst CustomFormControl = styled(FormControl)`\n  width: 100%;\n`;\n\nexport default SelectBox;\n","import React from \"react\";\nimport { Switch } from \"@material-ui/core/\";\n\ntype Props = {\n  checked: boolean;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n};\nconst LocalSwitch: React.FC<Props> = (props) => {\n  return (\n    <Switch\n      checked={props.checked}\n      onChange={props.onChange}\n      color=\"primary\"\n      name=\"checked\"\n    />\n  );\n};\n\nexport default LocalSwitch;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ntype Props = {\n  text: string;\n  action: Function;\n};\n\nconst TextLink: React.FC<Props> = (props) => {\n  return (\n    <Link href=\"#\" onClick={() => props.action()}>\n      {props.text}\n    </Link>\n  );\n};\n\nconst Link = styled.a`\n  color: #fff;\n  cursor: pointer;\n  opacity: 1;\n  text-decoration: none;\n  transition: opacity 200ms ease-out;\n  &:hover {\n    opacity: 0.7;\n  }\n`;\n\nexport default TextLink;\n","import React, { useState, useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { resetPassword } from \"../reducks/users/operations\";\nimport styled from \"styled-components\";\nimport { AccountTextInput, Button, TextLink } from \"./UIkit\";\nimport { push } from \"connected-react-router\";\n\nconst Reset: React.FC = () => {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState(\"\");\n\n  const inputEmail = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      setEmail(event.target.value);\n    },\n    [setEmail]\n  );\n\n  return (\n    <SigninContainer>\n      <h2 className=\"login-title\">Reset Password</h2>\n      <AccountTextInput\n        label={\"email\"}\n        value={email}\n        onChange={inputEmail}\n      />\n      <Button\n        label={\"Reset Password\"}\n        onClick={() => dispatch(resetPassword(email))}\n      />\n      <div className=\"sub-menu\">\n        <TextLink text={\"\"} action={() => alert(\"forget\")} />\n        <TextLink\n          text={\"Back to SignIn\"}\n          action={() => dispatch(push(\"/signin\"))}\n        />\n      </div>\n    </SigninContainer>\n  );\n};\n\nconst SigninContainer = styled.div`\n  .login-title {\n    font-size: 24px;\n    margin-bottom: 32px;\n    color: #fff;\n  }\n\n  .separator-text {\n    margin: 24px 0;\n    color: #fff;\n  }\n\n  .sub-menu {\n    display: flex;\n    justify-content: space-between;\n    margin-top: 16px;\n    color: #fff;\n  }\n`;\n\nexport default Reset;\n","import { fetchTodosAction, toggleActiveStateAction } from \"./actions\";\nimport { db, FirebaseTimetamp } from \"../../firebase\";\nimport { Dispatch } from \"redux\";\nimport { Todo } from \"../store/types\";\n\nexport const createTodo = (\n  name: string,\n  limitDate: Date | string,\n  category: string,\n  memo: string\n) => {\n  return async () => {\n    const timeStamp = FirebaseTimetamp.now();\n    if (name === \"\" || category === \"\") {\n      alert(\"TODOタイトル・カテゴリは必須項目です\");\n      return false;\n    } else {\n      const todosRef = db.collection(\"todos\").doc();\n      const addData = {\n        id: todosRef.id,\n        name: name,\n        limit_date: limitDate,\n        category: category,\n        memo: memo,\n        active_state: true,\n        created_at: timeStamp,\n        update_at: timeStamp,\n      };\n      todosRef.set(addData);\n    }\n  };\n};\n\nexport const deleteTodo = (id: string) => {\n  return async () => {\n    db.collection(\"todos\")\n      .doc(id)\n      .delete()\n      .then(() => {\n        fetchTodos();\n        alert(\"削除しました\");\n      });\n  };\n};\n\nexport const fetchTodos = () => {\n  return async (dispatch: Dispatch) => {\n    db.collection(\"todos\")\n      .orderBy(\"update_at\", \"asc\")\n      .get()\n      .then((snapshots) => {\n        const list: Todo[] = [];\n        snapshots.forEach((snapshot) => {\n          const data = snapshot.data();\n          list.push({\n            id: data.id,\n            name: data.name,\n            limitDate: data.limitDate,\n            category: data.category,\n            memo: data.memo,\n            activeState: data.active_state,\n            createdAt: data.created_at,\n          });\n        });\n        dispatch(fetchTodosAction(list));\n      });\n  };\n};\n\nexport const toggleActiveState = (id: string, state: boolean) => {\n  return async (dispatch: Dispatch, getState: any) => {\n    const data = { active_state: state };\n    db.collection(\"todos\")\n      .doc(id)\n      .set(data, { merge: true })\n      .then(() => {\n        const todoList: Todo[] = getState().todo.todoList;\n        const index = todoList.findIndex((todo) => todo.id === id);\n        todoList[index].activeState = state;\n        dispatch(toggleActiveStateAction(todoList));\n      });\n  };\n};\n","import { createSelector } from \"reselect\";\nimport { usersState } from \"../store/types\";\n\nconst usersSelector = (state: any): usersState => {\n  return state.users;\n};\n\nexport const getCategories = createSelector(\n  [usersSelector],\n  (state) => state.categories\n);\n\nexport const getIsSignedIn = createSelector(\n  [usersSelector],\n  (state) => state.isSignedIn\n);\n\nexport const getUserId = createSelector(\n  [usersSelector],\n  (state) => state.uid\n);\n\nexport const getUserName = createSelector(\n  [usersSelector],\n  (state) => state.userName\n);\n","import React, { useCallback, useState } from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport {\n  InputDatePicker,\n  SelectBox,\n} from \"../../components/UIkit/index\";\nimport { InputText } from \"../UIkit/index\";\nimport {\n  createTodo,\n  fetchTodos,\n} from \"../../reducks/todos/operations\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { SecondaryButton } from \"../UIkit/index\";\nimport { getCategories } from \"../../reducks/users/selectore\";\n\ntype Props = {\n  isOpen: boolean;\n  onClose: (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => void;\n};\n\nconst AddToDoModal: React.FC<Props> = (props) => {\n  const dispatch = useDispatch();\n\n  const selector = useSelector((state) => state);\n  const categories = getCategories(selector);\n\n  const [name, setName] = useState(\"\");\n  const [limitDate, setLimitDate] = useState(new Date());\n  const [category, setCategory] = useState(\"\");\n  const [memo, setMemo] = useState(\"\");\n\n  const InputName = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      setName(event.target.value);\n    },\n    []\n  );\n\n  const InputLimitDate = useCallback((date: Date | null) => {\n    if (date === null) return;\n    setLimitDate(new Date(date));\n  }, []);\n\n  const SelectedCategory = useCallback(\n    (event: React.ChangeEvent<{ value: unknown }>) => {\n      setCategory(event.target.value as string);\n    },\n    []\n  );\n\n  const InputMemo = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      setMemo(event.target.value);\n    },\n    []\n  );\n\n  const createTodoSubmit = useCallback(\n    (event) => {\n      dispatch(createTodo(name, limitDate, category, memo));\n      dispatch(fetchTodos());\n      setName(\"\");\n      setLimitDate(new Date());\n      setCategory(\"\");\n      setMemo(\"\");\n      props.onClose(event);\n    },\n    [dispatch, name, limitDate, category, memo, props]\n  );\n\n  return (\n    <div>\n      <Dialog\n        open={props.isOpen}\n        onClose={props.onClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">\n          ToDoを追加する\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            追加するToDoの詳細を入力してください。\n          </DialogContentText>\n          <InputText\n            id={\"todo-name\"}\n            label={\"ToDoタイトル\"}\n            type={\"text\"}\n            value={name}\n            fullWidth={true}\n            multiline={false}\n            rows={0}\n            autoFocus={true}\n            onChange={InputName}\n          />\n          <InputDatePicker\n            id={\"limit-date\"}\n            value={limitDate}\n            label={\"期限日\"}\n            onChange={InputLimitDate}\n          />\n          <SelectBox\n            label={\"Category\"}\n            inputId={\"category\"}\n            selectBoxId={\"category-select\"}\n            value={category}\n            items={categories}\n            onChange={SelectedCategory}\n          />\n          <InputText\n            id={\"todo-memo\"}\n            label={\"備考\"}\n            type={\"textarea\"}\n            value={memo}\n            fullWidth={true}\n            multiline={true}\n            rows={4}\n            autoFocus={false}\n            onChange={InputMemo}\n          />\n        </DialogContent>\n        <DialogActions>\n          <SecondaryButton\n            label={\"TODO追加\"}\n            color={\"primary\"}\n            onClick={createTodoSubmit}\n          />\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default AddToDoModal;\n","import React, { useCallback, useState } from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { InputText } from \"../UIkit/index\";\nimport {\n  addCategory,\n  fetchCategories,\n} from \"../../reducks/users/operations\";\nimport { useDispatch } from \"react-redux\";\nimport { SecondaryButton } from \"../UIkit/index\";\n\ntype Props = {\n  isOpen: boolean;\n  onClose: (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => void;\n};\n\nconst AddToDoModal: React.FC<Props> = (props) => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState(\"\");\n\n  const InputName = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      setName(event.target.value);\n    },\n    []\n  );\n\n  const addCategoryMethod = useCallback(\n    (event) => {\n      dispatch(addCategory(name));\n      setName(\"\");\n      dispatch(fetchCategories());\n      props.onClose(event);\n    },\n    [dispatch, name, props]\n  );\n\n  return (\n    <div>\n      <Dialog\n        open={props.isOpen}\n        onClose={props.onClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">\n          カテゴリを追加する\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            追加するカテゴリの名称を入力してください。\n          </DialogContentText>\n          <InputText\n            autoFocus={true}\n            id={\"category-name\"}\n            label={\"カテゴリ名\"}\n            type={\"text\"}\n            value={name}\n            fullWidth={true}\n            multiline={false}\n            rows={0}\n            onChange={InputName}\n          />\n        </DialogContent>\n        <DialogActions>\n          <SecondaryButton\n            label={\"カテゴリ追加\"}\n            color={\"primary\"}\n            onClick={addCategoryMethod}\n          />\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default AddToDoModal;\n","import React, { useCallback, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Button } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { AddCategoryModal } from \"./modal/index\";\nimport { getCategories } from \"../reducks/users/selectore\";\nimport { useSelector } from \"react-redux\";\n\ntype Props = {\n  onClick: (id: string | number) => void;\n};\n\nconst SideMenu: React.FC<Props> = ({ onClick }) => {\n  const selector = useSelector((state) => state);\n  const categories = getCategories(selector);\n  const [\n    isOpenAddCategoryModal,\n    setIsOpenAddCategoryModal,\n  ] = useState(false);\n\n  const openAddCategoryModal = useCallback(() => {\n    setIsOpenAddCategoryModal(true);\n  }, []);\n\n  const closeAddCategoryModal = useCallback(() => {\n    setIsOpenAddCategoryModal(false);\n  }, []);\n\n  return (\n    <SideBarWrapper>\n      <MenuTitle className=\"menu-text\">タスクの絞り込み</MenuTitle>\n      <SideMunuContainer>\n        <ul className=\"menu\">\n          <li className=\"menu-item\" onClick={() => onClick(0)}>\n            すべて\n          </li>\n          {categories.length > 0 &&\n            categories.map((category) => (\n              <li\n                key={category.id}\n                className=\"menu-item\"\n                onClick={() => onClick(category.id)}\n              >\n                {category.name}\n              </li>\n            ))}\n        </ul>\n      </SideMunuContainer>\n      <AddCategory>\n        <Button\n          color=\"primary\"\n          startIcon={<AddIcon />}\n          onClick={openAddCategoryModal}\n        >\n          カテゴリ追加\n        </Button>\n      </AddCategory>\n      <AddCategoryModal\n        isOpen={isOpenAddCategoryModal}\n        onClose={closeAddCategoryModal}\n      />\n    </SideBarWrapper>\n  );\n};\n\nconst SideBarWrapper = styled.div`\n  margin-right: 16px;\n  width: 240px;\n`;\n\nconst MenuTitle = styled.div`\n  margin-bottom: 12px;\n  color: ${(props) => props.theme.palette.text.secondary};\n  font-size: 12px;\n`;\n\nconst AddCategory = styled.div`\n  width: 100%;\n  margin-top: 8px;\n  text-align: right;\n`;\n\nconst SideMunuContainer = styled.div`\n  width: 100%;\n  border-radius: 4px;\n  box-shadow: 0 0 8px rgb(0 0 0 / 20%);\n  .menu {\n    width: 100%;\n  }\n  .menu-item {\n    padding: 0 16px;\n    border-bottom: 1px solid #ececec;\n    cursor: pointer;\n    line-height: 40px;\n    &:hover {\n      background: ${(props) => props.theme.palette.primary.light};\n    }\n    &:last-of-type {\n      border-bottom: none;\n    }\n  }\n`;\n\nexport default SideMenu;\n","import React, { useState, useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { SignIn, SignWithGoogle } from \"../reducks/users/operations\";\nimport styled from \"styled-components\";\nimport { AccountTextInput, Button, TextLink } from \"./UIkit\";\nimport { push } from \"connected-react-router\";\n\nconst Login: React.FC = () => {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const inputEmail = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      setEmail(event.target.value);\n    },\n    [setEmail]\n  );\n\n  const inputPassword = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      setPassword(event.target.value);\n    },\n    [setPassword]\n  );\n\n  return (\n    <SigninContainer>\n      <h2 className=\"login-title\">Login</h2>\n      <Button\n        label={\"Login with Google\"}\n        onClick={() => dispatch(SignWithGoogle())}\n        color={\"white\"}\n      />\n      <p className=\"separator-text\">or</p>\n      <AccountTextInput\n        label={\"email\"}\n        value={email}\n        onChange={inputEmail}\n      />\n      <AccountTextInput\n        label={\"password\"}\n        type={\"password\"}\n        value={password}\n        onChange={inputPassword}\n      />\n      <Button\n        label={\"Login\"}\n        onClick={() => dispatch(SignIn(email, password))}\n        color={\"white\"}\n      />\n      <div className=\"sub-menu\">\n        <TextLink\n          text={\"Forgot Password\"}\n          action={() => dispatch(push(\"/reset\"))}\n        />\n        <TextLink\n          text={\"Create Account\"}\n          action={() => dispatch(push(\"/signup\"))}\n        />\n      </div>\n    </SigninContainer>\n  );\n};\n\nconst SigninContainer = styled.div`\n  .login-title {\n    font-size: 24px;\n    margin-bottom: 32px;\n    color: #fff;\n  }\n\n  .separator-text {\n    margin: 24px 0;\n    color: #fff;\n  }\n\n  .sub-menu {\n    display: flex;\n    justify-content: space-between;\n    margin-top: 16px;\n    color: #fff;\n  }\n`;\n\nexport default Login;\n","import { push } from \"connected-react-router\";\nimport React, { useCallback, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport {\n  Button,\n  AccountTextInput,\n  TextLink,\n} from \"../components/UIkit\";\nimport { signup } from \"../reducks/users/operations\";\n\nconst SignUp: React.FC = () => {\n  const dispatch = useDispatch();\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  const inputUsername = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      setUsername(event.target.value);\n    },\n    [setUsername]\n  );\n\n  const inputEmail = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      setEmail(event.target.value);\n    },\n    [setEmail]\n  );\n\n  const inputPassword = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      setPassword(event.target.value);\n    },\n    [setPassword]\n  );\n\n  const inputConfirmPassword = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      setConfirmPassword(event.target.value);\n    },\n    [setConfirmPassword]\n  );\n\n  return (\n    <SignupContainer>\n      <h2 className=\"title\">SignUp</h2>\n      <AccountTextInput\n        label={\"username\"}\n        value={username}\n        onChange={inputUsername}\n      />\n      <AccountTextInput\n        label={\"email\"}\n        value={email}\n        onChange={inputEmail}\n      />\n      <AccountTextInput\n        label={\"password\"}\n        type={\"password\"}\n        value={password}\n        onChange={inputPassword}\n      />\n      <AccountTextInput\n        label={\"password\"}\n        type={\"password\"}\n        value={confirmPassword}\n        onChange={inputConfirmPassword}\n      />\n      <Button\n        label={\"SignUp\"}\n        onClick={() =>\n          dispatch(signup(username, email, password, confirmPassword))\n        }\n        color={\"white\"}\n      />\n      <div className=\"sub-menu\">\n        <TextLink text={\"\"} action={() => alert(\"いいい\")} />\n        <TextLink\n          text={\"Signin\"}\n          action={() => dispatch(push(\"/signin\"))}\n        />\n      </div>\n    </SignupContainer>\n  );\n};\n\nconst SignupContainer = styled.div`\n  .title {\n    font-size: 24px;\n    margin-bottom: 32px;\n    color: #fff;\n  }\n  .sub-menu {\n    display: flex;\n    justify-content: space-between;\n    margin-top: 16px;\n    color: #fff;\n  }\n`;\n\nexport default SignUp;\n","import { createSelector } from \"reselect\";\nimport { todoState } from \"../store/types\";\n\nconst todoSelector = (state: any): todoState => {\n  return state.todo;\n};\n\nexport const getTodoList = createSelector(\n  [todoSelector],\n  (state) => state.todoList\n);\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { PrimaryButton } from \"../components/UIkit/index\";\nimport styled from \"styled-components\";\nimport { AddToDoModal } from \"../components/modal/\";\nimport { useSelector } from \"react-redux\";\nimport { getTodoList } from \"../reducks/todos/selectore\";\nimport { ToDoItem } from \"./index\";\n\ntype Props = {\n  categoryId: string | number;\n};\n\nconst ToDoBody: React.FC<Props> = ({ categoryId }) => {\n  const selector = useSelector((state) => state);\n  const todoList = getTodoList(selector);\n  const [filteredList, setFilteredList] = useState(todoList);\n\n  const [isOpenAddTodoModal, setIsOpenAddTodoModal] = useState(false);\n\n  const openAddTodoModal = useCallback(() => {\n    setIsOpenAddTodoModal(true);\n  }, []);\n\n  const closeAddTodoModal = useCallback(() => {\n    setIsOpenAddTodoModal(false);\n  }, []);\n\n  useEffect(() => {\n    if (categoryId === 0 || !categoryId) {\n      setFilteredList(todoList);\n    } else {\n      setFilteredList(\n        todoList.filter((todo) => todo.category === categoryId)\n      );\n    }\n  }, [categoryId, todoList]);\n\n  return (\n    <ToDoBodyWrapper>\n      <Controller>\n        <PrimaryButton\n          label={\"TODOを追加\"}\n          onClick={openAddTodoModal}\n        />\n      </Controller>\n      <ul>\n        {filteredList.length > 0 &&\n          filteredList.map((todo) => (\n            <ToDoItem key={todo.id} todo={todo} />\n          ))}\n      </ul>\n      <AddToDoModal\n        isOpen={isOpenAddTodoModal}\n        onClose={closeAddTodoModal}\n      />\n    </ToDoBodyWrapper>\n  );\n};\n\nconst ToDoBodyWrapper = styled.div`\n  width: 100%;\n`;\n\nconst Controller = styled.div`\n  margin-bottom: 16px;\n  text-align: right;\n`;\n\nexport default ToDoBody;\n","import dayjs from \"dayjs\";\nimport ja from \"dayjs/locale/ja\";\n\ndayjs.locale(ja);\n\nexport const yyyymmdd = (date: Date) => {\n  const formatDate = dayjs(date);\n  return formatDate.format(\"YYYY-MM-DD\");\n};\n","import {\n  createStore as reduxCreateStore,\n  combineReducers,\n  applyMiddleware,\n} from \"redux\";\nimport {\n  connectRouter,\n  routerMiddleware,\n} from \"connected-react-router\";\nimport * as History from \"history\";\nimport thunk from \"redux-thunk\";\nimport { UsersReducer } from \"../users/reducers\";\nimport { ToDoesReducer } from \"../todos/reducers\";\n\nexport default function createStore(\n  history: History.History<unknown>\n) {\n  return reduxCreateStore(\n    combineReducers({\n      router: connectRouter(history),\n      users: UsersReducer,\n      todo: ToDoesReducer,\n    }),\n    applyMiddleware(routerMiddleware(history), thunk)\n  );\n}\n","import React, { useState, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { Todo } from \"../reducks/store/types\";\nimport { SecondaryChip, Switch } from \"../components/UIkit/index\";\nimport { yyyymmdd } from \"../plugins/dayjs\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  deleteTodo,\n  fetchTodos,\n  toggleActiveState,\n} from \"../reducks/todos/operations\";\nimport { getCategories } from \"../reducks/users/selectore\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\ntype Props = {\n  todo: Todo;\n};\n\nconst ToDoItem: React.FC<Props> = ({ todo }) => {\n  const dispatch = useDispatch();\n  const selector = useSelector((state) => state);\n  const categories = getCategories(selector);\n  const [state, setState] = useState(true);\n\n  const handleChange = (id: string, activeState: boolean) => {\n    setState(!activeState);\n    dispatch(toggleActiveState(id, !activeState));\n  };\n\n  const displayCategory = (id: string): string => {\n    const category = categories.find(\n      (category) => category.id === id\n    );\n    return category ? category.name : \"\";\n  };\n\n  const deleteTodoSubmit = useCallback(\n    (id: string) => {\n      dispatch(deleteTodo(id));\n      dispatch(fetchTodos());\n    },\n    [dispatch]\n  );\n\n  return (\n    <ToDoItem2\n      key={todo.id}\n      className={!todo.activeState ? \"is-done\" : \"\"}\n    >\n      <div className={`overlay ${!state ? \"is-done\" : \"\"}`} />\n      <div className=\"switch-erea\">\n        <Switch\n          checked={todo.activeState}\n          onChange={() => handleChange(todo.id, todo.activeState)}\n        />\n      </div>\n      <div className=\"content-erea\">\n        <div className=\"content-title\">{todo.name}</div>\n        <div className=\"content-date\">\n          登録日：{yyyymmdd(todo.createdAt.toDate())}\n          ／期限日：\n          {todo.limitDate ? yyyymmdd(todo.limitDate) : \"ー\"}\n        </div>\n        <ul className=\"content-category\">\n          <li>\n            <SecondaryChip label={displayCategory(todo.category)} />\n          </li>\n        </ul>\n      </div>\n      <div className=\"delete-erea\">\n        <IconButton onClick={() => deleteTodoSubmit(todo.id)}>\n          <DeleteIcon />\n        </IconButton>\n      </div>\n    </ToDoItem2>\n  );\n};\n\nconst ToDoItem2 = styled.li`\n  align-items: center;\n  padding: 16px 0;\n  border-top: 1px solid ${(props) => props.theme.palette.grey.line};\n  display: flex;\n  position: relative;\n  &:last-of-type {\n    border-bottom: 1px solid\n      ${(props) => props.theme.palette.grey.line};\n  }\n  &.is-done {\n    &:hover {\n      background-color: #fff;\n    }\n    .overlay {\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      background-color: ${(props) => props.theme.palette.grey[200]};\n      opacity: 0.5;\n    }\n  }\n  .switch-erea {\n    flex-basis: 9%;\n  }\n  .content-erea {\n    flex-basis: 84%;\n    .content-title {\n      margin-bottom: 8px;\n      font-size: 16px;\n      font-weight: bold;\n    }\n    .content-date {\n      font-size: 12px;\n    }\n    .content-category {\n      margin-top: 8px;\n    }\n  }\n  .delete-erea {\n    flex-basis: 5%;\n    text-align: center;\n  }\n`;\n\nexport default ToDoItem;\n","export default __webpack_public_path__ + \"static/media/login-back.b84ce1aa.png\";","import React, { useEffect, useState } from \"react\";\nimport { Reset, SignIn, SignUp } from \"../components/\";\nimport styled from \"styled-components\";\nimport backgroundImage from \"../assets/images/login-back.png\";\n\nconst Account: React.FC = () => {\n  const pathname = window.location.pathname;\n  const [path, setPath] = useState(\"signin\");\n\n  useEffect(() => {\n    setPath(pathname.split(\"/\")[1].replace(\"#\", \"\"));\n  }, [pathname]);\n  return (\n    <AccountWrap\n      style={{ backgroundImage: `url(${backgroundImage})` }}\n    >\n      <div className=\"overlay\" />\n      <div className=\"container\">\n        {path === \"signin\" && <SignIn />}\n        {path === \"signup\" && <SignUp />}\n        {path === \"reset\" && <Reset />}\n        {/* {isSignIn ? <SignIn /> : <SignUp />} */}\n      </div>\n    </AccountWrap>\n  );\n};\n\nconst AccountWrap = styled.div`\n  height: 100vh;\n  position: relative;\n  background-size: cover;\n\n  .overlay {\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    background: #000;\n    opacity: 0.4;\n  }\n\n  .container {\n    width: 320px;\n    margin: 0 auto;\n    padding-top: 88px;\n    position: relative;\n    text-align: center;\n  }\n`;\n\nexport default Account;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUserName } from \"../reducks/users/selectore\";\nimport { SideMenu, ToDoBody } from \"../components/index\";\nimport { fetchCategories } from \"../reducks/users/operations\";\nimport { fetchTodos } from \"../reducks/todos/operations\";\n\nconst Home: React.FC = () => {\n  const dispatch = useDispatch();\n  const selector = useSelector((state) => state);\n  const username = getUserName(selector);\n  const [filterCategoryId, setFilterCategoryId] = useState(0);\n\n  const filterCategory = useCallback((id) => {\n    setFilterCategoryId(id);\n  }, []);\n\n  useEffect(() => {\n    dispatch(fetchCategories());\n    dispatch(fetchTodos());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Container>\n      <h2 className=\"title\">{username}さんのタスク</h2>\n      <ToDoWrapper>\n        <SideMenu onClick={filterCategory} />\n        <ToDoBody categoryId={filterCategoryId} />\n      </ToDoWrapper>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  width: 100%;\n  max-width: 1024px;\n  margin: 0 auto;\n  padding: 0 16px;\n  .title {\n    margin: 24px 0 32px;\n    font-size: 20px;\n  }\n`;\n\nconst ToDoWrapper = styled.div`\n  display: flex;\n  justify-content: flex-start;\n`;\n\nexport default Home;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { listenAuthState } from \"./reducks/users/operations\";\nimport { getIsSignedIn } from \"./reducks/users/selectore\";\n\nconst Auth = ({ children }: any) => {\n  const dispatch = useDispatch();\n  const selector = useSelector((state) => state);\n  const isSignedIn = getIsSignedIn(selector);\n\n  useEffect(() => {\n    if (!isSignedIn) {\n      dispatch(listenAuthState());\n    }\n  }, [dispatch, isSignedIn]);\n\n  if (!isSignedIn) {\n    return <></>;\n  } else {\n    return children;\n  }\n};\n\nexport default Auth;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router\";\nimport { Home, Account } from \"./templates\";\nimport Auth from \"./Auth\";\n\nconst Router: React.FC = () => {\n  return (\n    <Switch>\n      <Route exact path={\"/signup\"} component={Account} />\n      <Route exact path={\"/signin\"} component={Account} />\n      <Route exact path={\"/reset\"} component={Account} />\n      <Auth>\n        <Route exact path={\"(/)?\"} component={Home} />\n      </Auth>\n    </Switch>\n  );\n};\n\nexport default Router;\n","import { createMuiTheme } from \"@material-ui/core/styles\";\n\n// Pick colors on https://material.io/resources/color/#!/\n\nexport const theme = createMuiTheme({\n  palette: {\n    text: {\n      primary: \"#585858\",\n      secondary: \"#AEAEAE\",\n    },\n    primary: {\n      light: \"#F2FFFC\",\n      main: \"#55AE99\",\n      dark: \"#3D7B6C\",\n      contrastText: \"#000\",\n    },\n    secondary: {\n      light: \"#ffff81\",\n      main: \"#E654A3\",\n      dark: \"#c8a415\",\n      contrastText: \"#000\",\n    },\n    grey: {\n      50: \"#fafafa\",\n      100: \"#f5f5f5\",\n      200: \"#eeeeee\",\n      300: \"#e0e0e0\",\n      400: \"#bdbdbd\",\n      500: \"#9e9e9e\",\n      600: \"#757575\",\n      700: \"#616161\",\n      800: \"#424242\",\n      900: \"#212121\",\n      line: \"#cecece\",\n      A100: \"#d5d5d5\",\n      A200: \"#aaaaaa\",\n      A400: \"#303030\",\n      A700: \"#616161\",\n    },\n  },\n});\n","import React from \"react\";\nimport Router from \"./Router\";\nimport \"./assets/styles/reset.css\";\nimport \"./assets/styles/style.css\";\nimport { ThemeProvider as MaterialThemeProvider } from \"@material-ui/styles\";\nimport { ThemeProvider as StyledThemeProvider } from \"styled-components\";\nimport { theme } from \"./assets/Theme\";\n\nconst App: React.FC = () => {\n  return (\n    <MaterialThemeProvider theme={theme}>\n      <StyledThemeProvider theme={theme}>\n        <Router />\n      </StyledThemeProvider>\n    </MaterialThemeProvider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport createStore from \"./reducks/store/store\";\nimport * as History from \"history\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { StylesProvider } from \"@material-ui/styles\";\n\nconst history = History.createBrowserHistory();\nexport const store = createStore(history);\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <StylesProvider injectFirst>\n        <App />\n      </StylesProvider>\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}